{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard.guard.ts","webpack:///./src/app/change-password/change-password.component.css","webpack:///./src/app/change-password/change-password.component.html","webpack:///./src/app/change-password/change-password.component.ts","webpack:///./src/app/contact/contact.component.css","webpack:///./src/app/contact/contact.component.html","webpack:///./src/app/contact/contact.component.ts","webpack:///./src/app/dashboard-header/dashboard-header.component.css","webpack:///./src/app/dashboard-header/dashboard-header.component.html","webpack:///./src/app/dashboard-header/dashboard-header.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/employee-details/employee-details.component.css","webpack:///./src/app/employee-details/employee-details.component.html","webpack:///./src/app/employee-details/employee-details.component.ts","webpack:///./src/app/employees-filter.pipe.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/login-header/login-header.component.css","webpack:///./src/app/login-header/login-header.component.html","webpack:///./src/app/login-header/login-header.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/login.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/user-details.service.ts","webpack:///./src/app/user-detalis/user-detalis.component.css","webpack:///./src/app/user-detalis/user-detalis.component.html","webpack:///./src/app/user-detalis/user-detalis.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [ RouterModule ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \".addClass{\\r\\n\\tcolor:red;\\r\\n}\\r\\n.ngx-pagination {\\r\\n    text-align: center;\\r\\n    margin-top: 27px;\\r\\n}\"","module.exports = \"<h3>when select the value as per call the function</h3>\\n<select class=\\\"form-control\\\" [(ngModel)]=\\\"selectName\\\" (ngModelChange)=\\\"changeSelectFun()\\\">\\n<option value=\\\"\\\">please select</option>\\n<option [value]=\\\"selectName.name\\\" *ngFor=\\\"let selectName of names\\\">{{selectName.name}}</option>\\n\\n</select><br>\\n<div *ngIf=\\\"showDetails\\\">\\t\\n<input type=\\\"text\\\" placeholder=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" class=\\\"form-control\\\">\\n<p style=\\\"text-align:center\\\">Length: {{ (similarData | employeesFilter:searchText )?.length }}<p>\\n<table border=\\\"1\\\" class=\\\"text_center\\\" width=\\\"100%\\\">\\n\\t  <caption>Thease are the all employee details</caption>\\n\\t\\t<tr>\\n\\t\\t    <th>S.No</th>\\n\\t\\t\\t<th>id: </th>\\n\\t\\t\\t<th>name: </th>\\t\\t\\t\\n\\t\\t\\t<th>userName: </th>\\n\\t\\t\\t<th>E-mail: </th>\\n\\t\\t</tr>\\n\\t\\t<tr *ngFor=\\\"let data of similarData | employeesFilter:searchText | paginate: { itemsPerPage: 10, currentPage: p } index as i\\\" >\\n\\t\\t    <td>{{i+1}}</td>\\n\\t\\t\\t<td>{{data.id}}\\t</td>\\n\\t\\t\\t<td>{{data.name}}{{data.title}}</td>\\n\\t\\t\\t<td>{{data.username}}{{data.userId}}<img src=\\\"{{data.url}}.jpg\\\" style=\\\"width:100%;max-width:52px;\\\"></td>\\n\\t\\t\\t<td>{{data.email}}</td>\\n\\t\\t</tr>\\n\\t</table>\\n\\t<pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n</div>\\n\\n\\n\\n<h3>Ag-Grid code here </h3>\\n<ag-grid-angular \\n    style=\\\"width: 100%; height: 400px;\\\" \\n    class=\\\"ag-theme-dark\\\"\\n    [rowData]=\\\"rowData\\\" \\n\\t[gridOptions]=\\\"gridOptions\\\"\\n\\t[defaultColDef]=\\\"defaultColDef\\\"\\n    [icons]=\\\"icons\\\"\\n    [columnDefs]=\\\"columnDefs\\\" \\n\\trowSelection=\\\"multiple\\\"\\n    >\\n</ag-grid-angular>\\n<br>\\n\\n\\n\\n\\nEnter text: <input type=\\\"text\\\" [(ngModel)]=\\\"arrayText\\\" placeholder=\\\"please enter text\\\">\\n<button (click)=\\\"arrFilt()\\\">arrayFilter</button><br>\\n\\ntotalArray: {{totalArray}}<br>\\nrevtotalArray: {{revtotalArray}}<br>\\n\\n<h3>Select the multiple values </h3>\\n\\n<ng-multiselect-dropdown\\n  [placeholder]=\\\"'custom placeholder'\\\"\\n  [data]=\\\"dropdownList\\\"\\n  [(ngModel)]=\\\"selectedItems\\\"\\n  [settings]=\\\"dropdownSettings\\\"\\n  (onSelect)=\\\"onItemSelect($event)\\\"\\n  (onSelectAll)=\\\"onSelectAll($event)\\\">\\n</ng-multiselect-dropdown><br>\\n\\n<button (click)=\\\"toggleText(); countFunc()\\\" (mouseover)=\\\"countFunc()\\\" class=\\\"btn btn-success\\\">{{text}}</button><br><br>\\n<p>mousehover on button count: {{count}}</p>\\n<p *ngIf=\\\"toggle\\\">This is sample toggle text </p>\\n\\n<button (click)=\\\"conuntDecr()\\\" [disabled]=\\\"count == 0\\\" class=\\\"btn btn-success\\\">prev</button>\\n<button (click)=\\\"countFunc()\\\" [disabled]=\\\"count == 10\\\" class=\\\"btn btn-info\\\">next</button><br><br>\\n<p *ngIf=\\\"count == 0\\\" [ngClass]=\\\"{'addClass': count == 0}\\\">you count length is 0 so prev button will be disabled</p>\\n\\n<p *ngIf=\\\"count == 10\\\" [ngClass]=\\\"{'addClass': count == 10}\\\">you count length is 10 so next button will be disabled</p>\\n\\ninput Text:<input type=\\\"text\\\" name=\\\"testTest\\\" placeholder=\\\"enter number\\\" [(ngModel)]=\\\"testTest\\\">\\n<button (click)=\\\"square()\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"testTest ==''\\\">Square</button>\\n\\n<div>\\ninput Value: {{testTest}} <br>\\nsquareTest: {{squareTest}}<br>\\nsquareTestLeft :{{squareTestLeft}}<br>\\nsquareTestRight : {{squareTestRight}}<br>\\nsquareSum : {{squareSum}}\\n</div><br><br>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport {GridOptions} from 'ag-grid';\nimport { HttpClientModule,HttpClient} from '@angular/common/http';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  dropdownList = [];\n  selectedItems = [];\n  dropdownSettings = {};\n  \n  \n  //select dropdown call the function\n  names:any;\n  selectName:any;\n  similarData:any;\n  showDetails:boolean = false;\n  \n  \n  //grid code here\n  gridOptions:any;\n  columnDefs:any;\n  rowData:any;\n  \n  //filter Array\n  array:any;\n  arrayText:any;\n  totalArray:any;\n  revtotalArray:any;\n  \n  //toggle text when cluck the button\n  toggle: boolean =false;\n  text:any;\n  count:any;\n  \n  \n  //sample task for square\n  testTest:any;\n  squareTest:any;\n  squareTestLeft:any;\n  squareTestRight:any;\n  squareSum:any;\n  \n  //constructor code \n  constructor(private http:HttpClient){\n\t  \n\t  //grid code here \n\t this.gridOptions = <GridOptions>{};\n\t\n\t\n  }\n  \n  \n  //page load code\n  ngOnInit() {\n\t  \n\t  //select dropdown call the function\n\t   this.names = [\n\t\t  {name:'india'},\n\t\t  {name:'usa'},\n\t\t  {name:'uk'}\n\t\t]\n\t  \n\t  //ng-grid for the row data\n\t   this.http.get('https://jsonplaceholder.typicode.com/todos').subscribe((data: any[]) =>{\n\t\t   this.rowData = data;\n\t\t   //console.log(\"length\",this.rowData.length);\n\t   })\n\t  \n\t  //grid code here\t  \n\t   this.columnDefs = [\n\t   {headerName: 'userId', field: 'userId'},\n        {headerName: 'id', field: 'id', \"pinned\":\"left\"},\n        {headerName: 'title', field: 'title'},\n        {headerName: 'completed', field: 'completed'}\n    ];\n\n\t  //filter Array\n\t  this.arrayText='';\n\t  //this.array=[1, 2, 2, 2, 3, 4];\n\t // console.log(\"before array:\",this.array);\n\t  \n\t  \n\t  //when click change the button text\n\t  this.text=\"button\";\n\t  this.count = 0;\t  \n\t  this.testTest = '';\n\t  \n\t  \n\t//multi select drop down default code\t  \n   this.dropdownList = [\n      { item_id: 1, item_text: 'Mumbai' },\n      { item_id: 2, item_text: 'Bangaluru' },\n      { item_id: 3, item_text: 'Hyderabad' },\n      { item_id: 4, item_text: 'Chennai' },\n      { item_id: 5, item_text: 'New Delhi' }\n    ];\n    this.selectedItems = [\n      { item_id: 3, item_text: 'Hyderabad' },\n      { item_id: 4, item_text: 'Chennai' }\n    ];\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'item_id',\n      textField: 'item_text',\n      selectAllText: 'Select All',\n      unSelectAllText: 'UnSelect All',\n      itemsShowLimit: 4,\n      allowSearchFilter: true\n    };\n\t\n}//ngonin it close \n\n   //changeSelectFun\n    changeSelectFun(){\n\t\tthis.showDetails = true;\n\t\tswitch(this.selectName){\n\t\t\t case \"india\": { \n\t\t\t this.http.get('https://jsonplaceholder.typicode.com/todos').subscribe((data: any[]) =>{\n\t\t\t\t   this.similarData = data;\n\t\t\t\t   //console.log(\"length\",this.rowData.length);\n\t\t\t   })\n\t\t\t\tbreak;\n\t\t\t }\n\t\t\t case \"usa\": { \n\t\t\t\tthis.http.get('https://jsonplaceholder.typicode.com/posts').subscribe((data: any[]) =>{\n\t\t\t\t   this.similarData = data;\n\t\t\t\t   //console.log(\"length\",this.rowData.length);\n\t\t\t   })\n\t\t\t   break;\n\t\t\t }\n\t\t\t case \"uk\": { \n\t\t\t\t\tthis.http.get('https://jsonplaceholder.typicode.com/photos').subscribe((data: any[]) =>{\n\t\t\t\t\t   this.similarData = data;\n\t\t\t\t\t   //console.log(\"length\",this.rowData.length);\n\t\t\t\t   })\n\t\t\t\tbreak;\n\t\t\t }\n        }\n\t\t\t \n\t}\n\n\n\tonItemSelect(item: any) {\n\t\t//console.log(item);\n\t  }\n\t  onSelectAll(items: any) {\n\t\t//console.log(items);\n\t  }\n\n\n//toggle chsnge the button text\ntoggleText(){\n\tthis.toggle = !this.toggle;\n      if(this.text === 'button') { \n        this.text = 'clicked';\n      } else {\n        this.text = 'button';\n      }\n    }\n\t\n\tcountFunc(){\n\t\tthis.count++;\n\t\t//alert(\"please click the button\");\n\t\tif(this.count == 10){\n\t\t  alert(\"your count length is completed:\");\n\t  }\n\t}\n\tconuntDecr(){\n\t\tthis.count--;\n\t}\n\t\n\t\n\tsquare(){\n\t  this.squareTest = this.testTest*this.testTest;\n\t  //alert(this.squareTest.toString().length/2);\n\t  \n\t  this.squareTestLeft = this.squareTest.toString().substring(0, this.squareTest.toString().length/2);\n\t  //alert(this.squareTestLeft);\n\t  this.squareTestRight =  this.squareTest.toString().substring(this.squareTest.toString().length/2);\n\t  this.squareSum = parseInt(this.squareTestRight) + parseInt(this.squareTestLeft);\n\t  }\n\t  \n\t//Array Filter function\n\tarrFilt(){\n\t\t\n\t\tthis.totalArray = this.array.reduce((sum, item) => sum + item, 0);\n\t\tthis.revtotalArray = this.totalArray.toString().split(\"\").reverse().join(\"\");\n\t\tconsole.log(\"ind\", this.array.findIndex());\n\n\t\t\n\t\t\n\t\t\n\t\t\n\t}\n\t  \n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule }    from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginHeaderComponent } from './login-header/login-header.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { DashboardHeaderComponent } from './dashboard-header/dashboard-header.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { UserDetalisComponent } from './user-detalis/user-detalis.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HttpClientModule,HttpClient  } from '@angular/common/http';\nimport { UserDetailsService } from './user-details.service';\nimport { EmployeesFilterPipe } from './employees-filter.pipe';\n\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; \nimport { ToastrModule } from 'ngx-toastr';\nimport { AuthGuardGuard } from './auth-guard.guard';\n\nimport { AgGridModule } from 'ag-grid-angular';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginHeaderComponent,\n    LoginComponent,\n    RegisterComponent,\n    ChangePasswordComponent,\n    DashboardHeaderComponent,\n    ContactComponent,\n    EmployeeDetailsComponent,\n    UserDetalisComponent,\n    DashboardComponent,\n    FooterComponent,\n    EmployeesFilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n\tHttpClientModule,\n\tFormsModule,ReactiveFormsModule,\n\tNgxSpinnerModule,\n\tNgxPaginationModule,\n\tBrowserAnimationsModule,\n    ToastrModule.forRoot(),\n\tNgMultiSelectDropDownModule.forRoot(),\n\tAgGridModule.withComponents([AppComponent]),\n\tRouterModule.forRoot([\n\t{path:'',\n\t    component:LoginHeaderComponent,\n\t\tchildren:[\n\t\t{path:'register', component:RegisterComponent},\n\t\t{path:'login', component:LoginComponent},\n\t\t{path:'changepass', component:ChangePasswordComponent}\n\t\t]\n\t},\n\t{path:'',\n\t    component:DashboardHeaderComponent,\n\t\tchildren:[\n\t\t{path:'contact', component:ContactComponent},\n\t\t{path:'dashboard', component:DashboardComponent},\n\t\t{path:'employees', component:EmployeeDetailsComponent},\n\t\t{path:'userDetail/:id', component:UserDetalisComponent}\n\t\t]\n\t},\n\t\n\t//redirect default page here\n\t{path:'**', redirectTo:'register'}\n\t])\n  ],\n  providers: [UserDetailsService, AuthGuardGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardGuard implements CanActivate {\n\tconstructor(private router:Router){}\n\t\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\t\tif(localStorage.getItem('email')){\n\t\t\tthis.router.navigate(['/']);\n    return true;\n\t\t}else{\n\t\t\t\n\t\t}\n  }\n}\n","module.exports = \"\"","module.exports = \"<h3 class=\\\"text_center\\\">Change password</h3>\\n  <div class=\\\"container\\\">\\n        <div class=\\\"card card-container\\\">            \\n            <img id=\\\"profile-img\\\" class=\\\"profile-img-card\\\" src=\\\"../assets/images/login.png\\\" />\\n\\t\\t\\t<form>\\n               <label>e-mail* :</label> \\n\\t\\t\\t   <input type=\\\"text\\\" name=\\\"email\\\" [(ngModel)]=\\\"changeReqData.email\\\" class=\\\"form-control\\\" placeholder=\\\"email*\\\"> <br>\\n\\t\\t\\t     <p *ngIf=\\\"inputInfo\\\" class=\\\"red_clr\\\">Please provide old email</p>\\n\\t\\t\\t   <label>old pass* :</label> \\n\\t\\t\\t   <input type=\\\"text\\\" name=\\\"pass\\\" [(ngModel)]=\\\"changeReqData.pass\\\" class=\\\"form-control\\\" placeholder=\\\"old password*\\\"> <br>\\n                 <p *ngIf=\\\"inputInfo\\\" class=\\\"red_clr\\\">Please enter old password</p>\\n\\t\\t\\t   <label> new password* :</label> \\n\\t\\t\\t   <input type=\\\"password\\\" name=\\\"newPass\\\" [(ngModel)]=\\\"changeReqData.newPass\\\" class=\\\"form-control\\\" placeholder=\\\"newPass *\\\"><br>\\n\\t\\t\\t   <button class=\\\"btn-signin form-control\\\" (click)=\\\"changePassWord()\\\">ChangePassword</button>\\n\\t\\t\\t</form>\\n\\t\\t\\t\\n\\t\\t\\t\\n        </div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { changeReq } from '../models/login';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\ninputInfo:boolean = false;\n\nchangeReqData: changeReq;\n  constructor(private router:Router,private toastr:ToastrService) { }\n\n  ngOnInit() {\n\t  this.changeReqData = new changeReq();\n  }\n\n   //changePassWord\n   changePassWord(){\n\t if(localStorage.getItem('email') == this.changeReqData.email && localStorage.getItem('pass') == this.changeReqData.pass){\n\t\t//alert(\"ok\");\n\t\t//console.log(\"change\", this.changeReqData.pass);\n\t\tthis.toastr.success('Pasword Updated', 'Update form');\n\t\tlocalStorage.setItem(\"pass\", this.changeReqData.newPass);\n\t\tthis.inputInfo = false;\n\t\tthis.changeReqData = new changeReq();\n\t\talert(\"change password successfully ----!\");\n\t\tthis.router.navigate(['/login']);\n\t }else{\n\t\t  this.toastr.error('Please fill the fields', 'Update form');\n\t\t this.inputInfo = true;\n\t\t //\talert(\"sorry\");\n\t }\n   }\n\n}\n","module.exports = \".contact-form{\\r\\n    background: #c1c1c1;\\r\\n    margin-top: 5%;\\r\\n\\tmargin-bottom:7%;\\r\\n    width: 70%;\\r\\n}\\r\\n.contact-form .form-control{\\r\\n    border-radius:1rem;\\r\\n}\\r\\n.contact-image{\\r\\n    text-align: center;\\r\\n}\\r\\n.contact-image img{\\r\\n    border-radius: 6rem;\\r\\n    width: 11%;\\r\\n    margin-top: -3%;\\r\\n    -webkit-transform: rotate(29deg);\\r\\n            transform: rotate(29deg);\\r\\n}\\r\\n.contact-form form .row{\\r\\n    margin-bottom: -7%;\\r\\n}\\r\\n.contact-form h3{\\r\\n    text-align: center;\\r\\n    color: #0062cc;\\r\\n}\\r\\n.contact-form .btnContact {\\r\\n    border-radius: 1rem;\\r\\n    padding: 1.5%;\\r\\n    background: #dc3545;\\r\\n    font-weight: 600;\\r\\n    color: #fff;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.btnContactSubmit\\r\\n{\\r\\n    width: 50%;\\r\\n    border-radius: 1rem;\\r\\n    padding: 1.5%;\\r\\n    color: #fff;\\r\\n    background-color: #0062cc;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<div class=\\\"container contact-form\\\">\\n\\t<div class=\\\"contact-image\\\">\\n\\t\\t<img src=\\\"../assets/images/contact.png\\\" alt=\\\"rocket_contact\\\"/>\\n\\t</div>\\n\\t<div class=\\\"row\\\">\\n\\t   <h3>Drop Us a Message</h3> \\n\\t\\t <div class=\\\"col-md-6\\\">\\t\\t\\t   \\n\\t\\t\\t <form method=\\\"post\\\">\\n\\t\\t\\t\\t\\t\\t \\n\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"txtName\\\" class=\\\"form-control\\\" placeholder=\\\"Your Name *\\\" value=\\\"\\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"txtEmail\\\" class=\\\"form-control\\\" placeholder=\\\"Your Email *\\\" value=\\\"\\\" />\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"txtPhone\\\" class=\\\"form-control\\\" placeholder=\\\"Your Phone Number *\\\" value=\\\"\\\" />\\n\\t\\t\\t\\t</div>                        \\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<textarea name=\\\"txtMsg\\\" class=\\\"form-control\\\" placeholder=\\\"Your Message *\\\" style=\\\"width: 100%; height: 150px;\\\"></textarea>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<input type=\\\"submit\\\" name=\\\"btnSubmit\\\" class=\\\"btnContact\\\" value=\\\"Send Message\\\" />\\n\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t                   \\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-md-6\\\">\\n\\t\\t<iframe src=\\\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3806.3311959118946!2d78.38991151425527!3d17.44385518804481!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3bcb93de30f7fe9b%3A0x49ad74e1706c9f30!2sGreatcoder-+HR+%26+Recruiting+%7C+IT+Job+Training!5e0!3m2!1sen!2sin!4v1546946226054\\\"\\n\\t\\twidth=\\\"100%\\\" height=\\\"300\\\" frameborder=\\\"0\\\" style=\\\"border:0\\\" allowfullscreen></iframe>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<!--header bar part -->\\n <nav class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Angular App</a>\\n    </div>\\n    <ul class=\\\"nav navbar-nav\\\">\\n      <li class=\\\"active\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n      <li><a routerLink=\\\"/login\\\">login</a></li>\\n\\t  <li><a routerLink=\\\"/employees\\\">employees</a></li>\\n\\t  <li><a routerLink=\\\"/contact\\\">contact</a></li>\\n    </ul>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <li><a routerLink=\\\"/register\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span> Sign Up</a></li>\\n\\t   <li *ngIf=\\\"!logInHide\\\"><a routerLink=\\\"/login\\\"><span class=\\\"glyphicon glyphicon-log-in\\\"></span> login</a></li>\\n      <li *ngIf=\\\"logInHide\\\" (click)=\\\"logOut()\\\" style=\\\"cursor:pointer;\\\"><a><span class=\\\"glyphicon glyphicon-log-in\\\"></span> Logout</a></li>\\n    </ul>\\n  </div>\\n</nav>\\n<!--header part end -->\\n\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\\n<!--spinner code here -->\\n<ngx-spinner\\nbdColor = \\\"rgba(51, 51, 51, 0.8)\\\"\\nsize = \\\"large\\\"\\ncolor = \\\"#fff\\\"\\ntype = \\\"ball-fussion\\\"\\n></ngx-spinner>\\n<!--spinner code here -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-header',\n  templateUrl: './dashboard-header.component.html',\n  styleUrls: ['./dashboard-header.component.css']\n})\nexport class DashboardHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"table{\\r\\n\\twidth:100%;\\r\\n}\\r\\ntable th{\\r\\n\\ttext-align:center;\\r\\n}\\r\\ntable caption{\\r\\n\\ttext-align:center;\\r\\n}\"","module.exports = \"\\t\\n\\t<!--for loop users table -->\\n\\t<table border=\\\"1\\\" class=\\\"text_center\\\">\\n\\t  <caption>This is your below Details</caption>\\n\\t\\t<tr>\\n\\t\\t    <th>S.No</th>\\n\\t\\t\\t<th>Name: </th>\\n\\t\\t\\t<th>E-mail: </th>\\n\\t\\t\\t<th>Phone: </th>\\n\\t\\t\\t<th>Password: </th>\\n\\t\\t</tr>\\n\\t\\t<tr *ngFor=\\\"let user of users index as i\\\">\\n\\t\\t    <td>{{i+1}}</td>\\n\\t\\t\\t<td>{{user.name}}</td>\\n\\t\\t\\t<td>{{user.email}}</td>\\n\\t\\t\\t<td>{{user.phone}}</td>\\n\\t\\t\\t<td>{{user.pass}}</td>\\n\\t\\t</tr>\\n\\t</table><br>\"","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\nusers:any;\n  constructor() { }\n\n  ngOnInit() {\n\t  this.users = [];\n\t  \n\t  this.users.push({\n\t\t  name:localStorage.getItem('name'),\n\t\t  phone:localStorage.getItem('phone'),\n\t\t  email:localStorage.getItem('email'),\n\t\t  pass:localStorage.getItem('pass')\n\t\t  \n\t  });\n  }\n\n}\n","module.exports = \"table{\\r\\n\\twidth:100%;\\r\\n}\\r\\ntable th{\\r\\n\\ttext-align:center;\\r\\n}\\r\\ntable caption{\\r\\n\\ttext-align:center;\\r\\n}\\r\\n.searchText{\\r\\n\\tmax-width: 200px;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n.active{\\r\\n\\tbackground-color:purple;\\r\\n\\tcolor:#fff;\\r\\n}\\r\\n.popUp_modal{\\r\\n    position: fixed;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n    background: #cdcdcdc9;\\r\\n}\\r\\n.spanMod{\\r\\n    font-size: 16px;\\r\\n    font-weight: bold;\\r\\n    border-bottom: 1px solid;\\r\\n    margin-right: 16px;\\r\\n}\\r\\n.hidden{\\r\\n\\tdisplay:block;\\r\\n}\"","module.exports = \"<div class=\\\"text_center\\\">\\n<div class=\\\"spinner\\\" [ngClass]=\\\"{ 'hidden': !loading }\\\">dkjbsdjkbvkjdb</div>\\nToatal Employess: {{employess.length}}\\n\\n<p>Employess Details!</p>\\nsearch:<input type=\\\"text\\\" [(ngModel)]=\\\"searchText\\\" placeholder=\\\"search\\\" class=\\\"form-control searchText\\\">\\nAfter Filter length: {{ (employess | employeesFilter:searchText)?.length}}\\n<div *ngIf=\\\"showDetails\\\">\\t\\n\\t<!--for loop users table -->\\n\\t<table border=\\\"1\\\" class=\\\"text_center\\\">\\n\\t  <caption>Thease are the all employee details</caption>\\n\\t\\t<tr>\\n\\t\\t    <th>S.No</th>\\n\\t\\t\\t<th>id: </th>\\n\\t\\t\\t<th>name: </th>\\t\\t\\t\\n\\t\\t\\t<th>userName: </th>\\n\\t\\t\\t<th>E-mail: </th>\\n\\t\\t\\t<th>VIEW</th>\\n\\t\\t\\t<th>delete</th>\\n\\t\\t</tr>\\n\\t\\t<tr *ngFor=\\\"let employee of employess | employeesFilter:searchText | paginate: { itemsPerPage: 2, currentPage: p } index as i\\\" (click)=\\\"selectedRow(employee)\\\" [ngClass]=\\\"{'active': row == employee}\\\">\\n\\t\\t    <td>{{i+1}}</td>\\n\\t\\t\\t<td>{{employee.id}}\\t</td>\\n\\t\\t\\t<td>{{employee.name}}</td>\\n\\t\\t\\t<td>{{employee.username}}</td>\\n\\t\\t\\t<td>{{employee.email}}</td>\\n\\t\\t\\t<td><a [routerLink]=\\\"['/userDetail',employee.id]\\\">VIEW</a></td>\\n\\t\\t\\t<td><button (click)=\\\"delEmployee(employee)\\\">Delete</button></td>\\n\\t\\t</tr>\\n\\t</table><br>\\n\\t<pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n\\t\\n\\t<!-- <div> -->\\n\\t\\t<!-- name: {{row.name}}<br> -->\\n\\t\\t<!-- username: {{row.username}}<br> -->\\n\\t\\t<!-- email : {{row.email}}<br> -->\\n\\t\\t<!-- <button (click)=\\\"preRow()\\\" class=\\\"btn btn-success\\\">prev</button> -->\\n\\t\\t   <!-- rowindex:{{rowindex}} -->\\n\\t\\t<!-- <button (click)=\\\"nextRow()\\\" class=\\\"btn btn-info\\\">next</button> -->\\n\\t\\n\\t<!-- </div> -->\\n\\t\\n\\t\\n\\t  <!-- Modal -->\\n  <div *ngIf=\\\"showModal\\\"  class=\\\"popUp_modal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n    \\n      <!-- Modal content-->\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"showModalClo()\\\">&times;</button>\\n          <h4 class=\\\"modal-title\\\">Employee Detail</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <p><span class=\\\"spanMod\\\">name:</span>{{row.name}}</p>\\n\\t\\t  <p><span class=\\\"spanMod\\\">username:</span> {{row.username}}</p>\\n\\t\\t  <p><span class=\\\"spanMod\\\">email :</span> {{row.email}}</p>\\n\\t\\t  <p><span class=\\\"spanMod\\\">rowindex:</span>{{rowindex}}</p>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n\\t\\t  <div style=\\\"text-align:center;\\\">\\n\\t\\t     <button (click)=\\\"preRow()\\\" class=\\\"btn btn-success\\\">prev</button>\\n\\t\\t     <button (click)=\\\"nextRow()\\\" class=\\\"btn btn-info\\\">next</button>\\n\\t\\t  </div>\\n        </div>\\n      </div>      \\n    </div>\\n  </div>\\n  \\n\\t\\n\\t\\n</div>\\n<div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserDetailsService } from '../user-details.service';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.css']\n})\nexport class EmployeeDetailsComponent implements OnInit {\n\t\n\t//loading\n\tloading:boolean;\n\t\n\t//selected rows variables\n\trow:any;\n\trowindex:any;\n\tshowModal:boolean = false;\n\t\n emplyIndex:any;\n private employess = [];\nshowDetails:boolean = false;\n  constructor(private userService: UserDetailsService,public router:Router, private spinner: NgxSpinnerService) { }\n\n  ngOnInit() {\n\t  this.loading = true;\n\t  this.get_employess();\n\t  \n\t  //selected row\n\t  this.row = [];\n  }\n  \n  //get all employees\n\tget_employess(){\n\t\t//alert(\"hi\");\n\t\t/** spinner starts on init */\n    //this.spinner.show();\n \n    setTimeout(() => {\n        /** spinner ends after 5 seconds */\n        this.spinner.hide();\n\t\t}, 5000);  \n\t\tthis.showDetails = true;\n\t\tthis.userService.get_employeesInfo().subscribe((resp : any[])=>{\n\t\t\tthis.employess = resp;\n\t\t})\n\tthis.loading = false;\n\t}\n\t//delete employee-details\n\tdelEmployee(employee){\n\t\tthis.emplyIndex = this.employess.indexOf(employee);\n\t\tif(confirm(this.emplyIndex)){\n\t\t//alert(this.emplyIndex);\n\t\tthis.employess.splice(this.emplyIndex, 1);\n\t\t}\t\n    }\n\t\n\t//selected row when click the particukar row\n\tselectedRow(employee){\n\t\tthis.showModal = true;\n\t\tthis.row = employee\n\t\tthis.rowindex = this.employess.indexOf(employee);\t\t\n\t}\n\t\n\t//preRow\n\tpreRow(){\n\t\t//console.log(\"this.rowindex first\", this.rowindex);\n\t\tthis.rowindex = (this.rowindex)-1;\n\t\tthis.row = this.employess[this.rowindex];\n\t\t//console.log(\"this.rowindex after\", this.rowindex);\n\t};\n\t\n\t//nextRow\n\tnextRow(){\n\t\tthis.rowindex = (this.rowindex)+1;\n\t\tthis.row = this.employess[this.rowindex];\t\t\n\t}\n\t\n\t//show modal close function\n\tshowModalClo(){\n\t    this.showModal = false;\n\t}\n\n\n\n\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'employeesFilter'\n})\nexport class EmployeesFilterPipe implements PipeTransform {\n\n  transform(value: any, input: string){\n    if(input){\n\t\t  input = input.toLocaleLowerCase();\n\t\t  return value.filter(function(username:any){\n\t\t\t  return username.name.toLocaleLowerCase().indexOf(input) > -1;\n\t\t  })\n\t\t  \n\t  }\n    return value;\n  }\n\n}\n","module.exports = \".fa{\\r\\n\\tfont-size:31px;\\r\\n}\\r\\nfooter{\\r\\n\\t    position: absolute;\\r\\n    display: block;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    background: #000;\\r\\n    padding: 12px 0;\\r\\n    color: #fff;\\r\\n}\"","module.exports = \"<!-- Footer -->\\n<footer>\\n   <!-- Footer Elements -->\\n    <div class=\\\"container\\\">\\n\\n      <!-- Social buttons -->\\n      <ul class=\\\"list-unstyled list-inline text-center\\\">\\n        <li class=\\\"list-inline-item\\\">\\n          <a class=\\\"btn-floating btn-fb\\\">\\n            <i class=\\\"fa fa-facebook-square\\\"> </i>\\n          </a>\\n        </li>\\n        <li class=\\\"list-inline-item\\\">\\n          <a class=\\\"btn-floating btn-tw\\\">\\n            <i class=\\\"fa fa-twitter\\\"> </i>\\n          </a>\\n        </li>\\n        <li class=\\\"list-inline-item\\\">\\n          <a class=\\\"btn-floating btn-gplus\\\">\\n            <i class=\\\"fa fa-google-plus\\\"> </i>\\n          </a>\\n        </li>\\n        <li class=\\\"list-inline-item\\\">\\n          <a class=\\\"btn-floating btn-li\\\">\\n            <i class=\\\"fa fa-linkedin-square\\\"> </i>\\n          </a>\\n        </li>\\n        \\n      </ul>\\n      <!-- Social buttons -->\\n\\n    </div>\\n  <!-- Copyright -->\\n  <div class=\\\"footer-copyright text-center py-3\\\">© 2018 Copyright: Angular\\n    <a [routerLink]=\\\"['/']\\\"> HOME </a>\\n  </div>\\n  <!-- Copyright -->\\n\\n</footer>\\n<!-- Footer -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-header',\n  templateUrl: './login-header.component.html',\n  styleUrls: ['./login-header.component.css']\n})\nexport class LoginHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h3 class=\\\"text_center\\\">Login Details</h3>\\n  <div class=\\\"container\\\">\\n        <div class=\\\"card card-container\\\">            \\n            <img id=\\\"profile-img\\\" class=\\\"profile-img-card\\\" src=\\\"../assets/images/login.png\\\" />\\n\\t\\t\\t<form>\\n               <label>e-mail* :</label> \\n\\t\\t\\t   <input type=\\\"text\\\" name=\\\"logEmail\\\" [(ngModel)]=\\\"loginReqData.logEmail\\\" class=\\\"form-control\\\" placeholder=\\\"email*\\\"> <br>\\t\\n                 <p *ngIf=\\\"DetailsInfo\\\" class=\\\"red_clr\\\">Please give valid email address</p>\\t\\n                  <p *ngIf=\\\"changePassInfo\\\" class=\\\"red_clr\\\">Please provide valid email address</p>\\n               <label>password* :</label> \\n\\t\\t\\t   <input type=\\\"password\\\" name=\\\"logPass\\\" [(ngModel)]=\\\"loginReqData.logPass\\\" class=\\\"form-control\\\" placeholder=\\\"Password*\\\">\\n\\t\\t\\t   <p *ngIf=\\\"DetailsInfo\\\" class=\\\"red_clr\\\">Please give valid pass address</p><br>\\t\\n\\t\\t\\t   <button class=\\\"btn-signin form-control\\\" (click)=\\\"login()\\\">Login</button><br>\\n\\t\\t\\t</form>\\n\\t\\t\\t<p class=\\\"btn-signin form-control\\\" (click)=\\\"changePass()\\\">ChangePassword</p>\\n\\t\\t\\t\\n        </div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { loginReq, regReq} from '../models/login';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nloginReqData:loginReq;\nDetailsInfo:boolean = false;\nchangePassInfo:boolean = false;\n\n\n  constructor(private router:Router,private toastr: ToastrService) { }\n\n  ngOnInit() {\n\t  this.loginReqData = new loginReq();\n  }\n  //Login function\n  login(){\n\t  if(this.loginReqData.logEmail == localStorage.getItem('email') && this.loginReqData.logPass == localStorage.getItem('pass')){\n       this.toastr.success('Login Success', 'Login form');\n\t   this.DetailsInfo = false;\n\t   this.loginReqData = new loginReq();\n\t   this.router.navigate(['/dashboard']);\n\t  }else{\n\t\t this.toastr.error('Please fill the correct fields', 'Login form');\n\t\tthis.DetailsInfo = true;\n\t  }\n  }\n  \n  //for change the password\n  changePass(){\n\t  if(this.loginReqData.logEmail == localStorage.getItem('email')){\n\t\t  \n\t\t  this.router.navigate(['/changepass']);\n\t  }else{\n\t\t  //alert(\"sorry\");\n\t\t  \n\t\t  //this.changePassInfo = true;\n\t  }\n\t  \n  }\n  \n  \n}\n","//login class\r\nexport class loginReq{\r\n  logEmail: any;\r\n  logPass: any;\r\n}\r\n\r\n//register class\r\nexport class regReq{\r\n\temail:any;\r\n\tpass:any;\r\n\tphone:any;\r\n\tname:any;\r\n}\r\n\r\n//changeReq information\r\nexport class changeReq {\r\n  email: any;\n  pass: any;\r\n  newPass:any;\r\n}\r\n","module.exports = \"\"","module.exports = \"<h3 class=\\\"text_center\\\">Registre Details</h3>\\n  <div class=\\\"container\\\">\\n        <div class=\\\"card card-container\\\">            \\n            <img id=\\\"profile-img\\\" class=\\\"profile-img-card\\\" src=\\\"../assets/images/login.png\\\" />\\n\\t\\t\\t<form [formGroup]=\\\"registerform\\\">\\n            <label>UserName* : </label>\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" [(ngModel)]=\\\"regReqData.name\\\" class=\\\"form-control\\\" placeholder=\\\"User Name*\\\">\\n\\t\\t\\t\\t<div *ngIf=\\\"submitted && registerform.controls.name.errors\\\">\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"registerform.controls.name.errors.required\\\"> required</div>\\n\\t\\t\\t\\t </div>\\n                <label>password* :</label> \\n\\t\\t\\t\\t<input type=\\\"password\\\" formControlName=\\\"pass\\\" [(ngModel)]=\\\"regReqData.pass\\\" class=\\\"form-control\\\" placeholder=\\\"Password*\\\">\\n\\t\\t\\t\\t<div *ngIf=\\\"submitted && registerform.controls.pass.errors\\\">\\n\\t\\t\\t\\t  <div *ngIf=\\\"registerform.controls.pass.errors.required\\\">\\n\\t\\t\\t\\t   <div *ngIf=\\\"registerform.controls.pass.errors.minLength\\\">Minimum password length is 6</div>\\n\\t\\t\\t\\t   </div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<label>phone* : </label>\\n\\t\\t\\t\\t<input type=\\\"text\\\" formControlName=\\\"phone\\\" [(ngModel)]=\\\"regReqData.phone\\\" class=\\\"form-control\\\" placeholder=\\\"phone*\\\">\\n\\t\\t\\t\\t<div *ngIf=\\\"submitted && registerform.controls.phone.errors\\\">\\n\\t\\t\\t\\t   <div *ngIf=\\\"registerform.controls.phone.errors.required\\\">required</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<label>e-mail* :</label> \\n\\t\\t\\t\\t<input type=\\\"text\\\" formControlName=\\\"email\\\" [(ngModel)]=\\\"regReqData.email\\\" class=\\\"form-control\\\" placeholder=\\\"email*\\\"> <br>\\n\\t\\t\\t\\t<div *ngIf=\\\"submitted && registerform.controls.email.errors\\\">\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"registerform.controls.email.errors.required\\\"> required</div>\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"registerform.controls.email.errors.email\\\"> must be a valid email address</div>\\n\\t\\t\\t\\t </div>\\n\\t\\t\\t\\t<button class=\\\"btn-signin\\\" (click)=\\\"register()\\\">Register</button>\\n\\t\\t\\t</form>\\n        </div>\\n    </div>\"","import { Component, OnInit } from '@angular/core';\nimport { regReq } from '../models/login';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators,FormControl } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\nregisterform:FormGroup;\nsubmitted= false;\nname:any;\nemail:any;\npass:any;\nphone:any;\n//for register variable data\n\n//Question if there is no use so why we should call this variable sir\n\nregReqData: regReq;\n\n  constructor(private router:Router,private formBuilder: FormBuilder,private toastr: ToastrService) { }\n\n  ngOnInit() {\n\t  \n\t  this.regReqData = new regReq();\n\t  \n\t  this.registerform = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      pass: ['', [Validators.required, Validators.minLength(6)]],\n\t  phone: ['', Validators.required]\n    });\n  }\n\nregister(){\n\tthis.submitted = true;\n\tif(this.registerform.invalid){\t\n\tthis.toastr.error('Please fill the all fields', 'Register form');\n\treturn;\n\t}else{localStorage.setItem(\"name\", this.regReqData.name);\n\tlocalStorage.setItem(\"email\", this.regReqData.email);\n\tlocalStorage.setItem(\"pass\", this.regReqData.pass);\n\tlocalStorage.setItem(\"phone\", this.regReqData.phone);\n\t\n\t//for success message\n\tthis.toastr.success('Register Success', 'Register Form');\n\t\t//alert(\"success Full login ---\");\n\t   //navigate to login page\n\t   this.router.navigate(['/login']);\n\t}\n}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDetailsService {\n\n  constructor(private httpClient:HttpClient) { }\n  \n  //get all employess\n  get_employeesInfo(){\n\t return this.httpClient.get('https://jsonplaceholder.typicode.com/users');\n  }\n  \n  //for single employee\n  get_employee(id:any){\n\t  return this.httpClient.get('https://jsonplaceholder.typicode.com/users/'+id);\n  }\n  \n}\n","module.exports = \"\"","module.exports = \"id: {{userDetail.id}}\\n<ul>\\n<li>id: {{userDetail.id}}</li>\\n<li>name: {{userDetail.name}}</li>\\n<li>user Name: {{userDetail.username}}</li>\\n<li>email: {{userDetail.email}}</li>\\n<li>phone: {{userDetail.phone}}</li>\\n<li>website: {{userDetail.website}}</li>\\n<li>Address:\\n<address>\\n  You can contact us at:<br>\\n  {{userDetail.address.street}},<br>\\n  {{userDetail.address.suite}},<br>\\n  {{userDetail.address.city}}.<br>\\n  lat:{{userDetail.address.geo.lat}}, Lang: {{userDetail.address.geo.lng}}.\\n</address>\\n\\n</li>\\n</ul>\"","import { Component, OnInit } from '@angular/core';\nimport { UserDetailsService } from '../user-details.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-user-detalis',\n  templateUrl: './user-detalis.component.html',\n  styleUrls: ['./user-detalis.component.css']\n})\nexport class UserDetalisComponent implements OnInit {\nprivate userDetail:any;\nsub:any;\nid:any;\n  constructor(private userService:UserDetailsService,private route:ActivatedRoute) { }\n\n  ngOnInit() {\n\t  \n\t  this.sub = this.route.params.subscribe(params =>{\n\t\t  this.id = params['id'];\n\t  });\n\t  this.employeeDetails()\n  }\n  \n  \n\temployeeDetails(){\n\t\tthis.userService.get_employee(this.id).subscribe((res: any[])=>{\n\t\t\tthis.userDetail = res;\n\t\t})\n\t}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}